<!doctype html>

<meta charset="utf8" />
<link rel="stylesheet" href="/static/styles.css" />

<h1>Bookmark Processor</h1>

<form id="search-params" action="/" method="GET">
  <label>
    Oldest first <input type="radio" name="order" value="asc" />
  </label>
  <label>
    Newest first <input type="radio" name="order" value="desc" />
  </label>
  <label>
    Limit <input type="number" name="limit" />
  </label>
  <button type="submit">Refresh</button>
</form>

<label>
  Show processed <input id="toggle-processed" type="checkbox" checked />
</label>

<button id="reverse-bookmarks" type="button">Reverse</button>

<table id="bookmarks" style="width: 100%">
  <thead>
    <tr>
      <th style="width: 550px">Bookmark</th>
      <th>Notes</th>
      <th style="width: 0">Actions</th>
    </tr>
  </thead>
  <tbody>{{# bookmarks }}
    <tr data-processed="{{ processed }}">
      <td>
        <div style="display: flex; flex-direction: column; gap: 5px;">
          <input
            form="{{ form_id }}"
            type="text"
            name="title"
            value="{{ title }}"
            style="flex-basis: 100%; font-weight: bold"
          />
          <div style="flex-basis: 100%; display: flex; gap: 5px;">
            <input
              form="{{ form_id }}"
              type="text" name="url" value="{{ url }}"
              style="flex: 1 0 auto"
              oninput="this.nextElementSibling.href = this.value"
            />
            <a href="{{ url }}" target="_blank" style="flex: 0 0 auto">↪︎</a>
          </div>
          <div>{{ added_formatted }}</div>
        </div>
      </td>
      <td>
        <textarea
          form="{{ form_id }}"
          rows="3"
          name="notes"
        >{{ notes }}</textarea>
      </td>
      <td>
        <div style="display: flex; flex-direction: column; gap: 5px">
          <button form="{{ form_id }}" type="reset">Revert</button>
          <form id="{{ form_id }}" action="/" method="POST">
            <input type="hidden" name="event" value="SAVE" />
            <input type="hidden" name="added" value="{{ added }}" />
            <button type="submit">Save</button>
          </form>
          <form action="/" method="POST">
            <input type="hidden" name="event" value="DELETE" />
            <input type="hidden" name="url" value="{{ url }}" />
            <button type="submit">Delete</button>
          </form>
        </div>
      </td>
    </tr>{{/ bookmarks }}
  </tbody>
</table>

<script>
  const form_obj = form => Object.fromEntries(
    [ ...form.elements ].filter(x => x.name).map(x => [ x.name, x.value ])
  );

  document.addEventListener("submit", event => {
    const form = event.target;
    const data = form_obj(form);

    if (/POST/i.test(form.method)) {
      event.preventDefault();

      fetch(
        form.action, {
          method: form.method,
          body: JSON.stringify(data)
        }
      ).then(() => {
        const row = form.closest("tr");

        switch (data.event.toUpperCase()) {
          case "SAVE":
            row.dataset.processed = true;
            break;
          case "DELETE":
            row.remove();
            break;
          default:
            break;
        }
      });
    }
  });

  document.getElementById("toggle-processed").addEventListener("change", e => {
    if (e.target.checked) {
      document.getElementById("bookmarks").classList.remove("processed-hidden");
    } else {
      document.getElementById("bookmarks").classList.add("processed-hidden");
    }
  });

  if (!document.getElementById("toggle-processed").checked) {
    document.getElementById("bookmarks").classList.add("processed-hidden");
  }

  document.getElementById("reverse-bookmarks").addEventListener("click", e => {
    const [ tbody ] = document.getElementById("bookmarks").tBodies;

    for (const row of [ ...tbody.rows ].reverse()) {
      tbody.appendChild(tbody.removeChild(row));
    }
  });

  const search_params = new URLSearchParams(window.location.search);
  const order = search_params.get("order");
  const limit = parseInt(search_params.get("limit")) || null;
  const query_form = document.getElementById("search-params");
  query_form.order.value = order;
  query_form.limit.value = limit;
</script>
