<!doctype html>

<meta charset="utf8" />
<link rel="stylesheet" href="/static/styles.css" />

<h1>Bookmark Processor</h1>

<table style="width: 100%">
  <thead>
    <tr>
      <th style="width: 550px">Bookmark</th>
      <th>Notes</th>
      <th style="width: 0">Actions</th>
    </tr>
  </thead>
  <tbody>{{# bookmarks }}
    <tr>
      <td>
        <div style="display: flex; flex-direction: column; gap: 5px;">
          <input
            form="{{ form_id }}"
            type="text"
            name="title"
            value="{{ title }}"
            style="flex-basis: 100%; font-weight: bold"
          />
          <div style="flex-basis: 100%; display: flex; gap: 5px;">
            <input
              form="{{ form_id }}"
              type="text" name="url" value="{{ url }}"
              style="flex: 1 0 auto"
              oninput="this.nextElementSibling.href = this.value"
            />
            <a href="{{ url }}" target="_blank" style="flex: 0 0 auto">↪︎</a>
          </div>
          <div>{{ added_formatted }}</div>
        </div>
      </td>
      <td>
        <textarea
          form="{{ form_id }}"
          rows="3"
          name="notes"
        >{{ notes }}</textarea>
      </td>
      <td>
        <div style="display: flex; flex-direction: column; gap: 5px">
          <button form="{{ form_id }}" type="reset">Revert</button>
          <form id="{{ form_id }}" action="/" method="POST">
            <input type="hidden" name="event" value="SAVE" />
            <input type="hidden" name="added" value="{{ added }}" />
            <button type="submit">Save</button>
          </form>
          <form action="/" method="POST">
            <input type="hidden" name="event" value="DELETE" />
            <input type="hidden" name="url" value="{{ url }}" />
            <button type="submit">Delete</button>
          </form>
        </div>
      </td>
    </tr>{{/ bookmarks }}
  </tbody>
</table>

<script>
  const form_obj = form => Object.fromEntries(
    [ ...form.elements ].filter(x => x.name).map(x => [ x.name, x.value ])
  );

  document.addEventListener("submit", event => {
    const form = event.target;

    if (/POST/i.test(form.method)) {
      event.preventDefault();

      fetch(
        form.action, {
          method: form.method,
          body: JSON.stringify(form_obj(form))
        }
      ).then(response => response.json()).then(console.log);
    }
  });
</script>
